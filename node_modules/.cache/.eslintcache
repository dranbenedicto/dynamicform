[{"C:\\Code Works\\dynamicform\\src\\index.js":"1","C:\\Code Works\\dynamicform\\src\\reportWebVitals.js":"2","C:\\Code Works\\dynamicform\\src\\App.js":"3","C:\\Code Works\\dynamicform\\src\\components\\Appbar.js":"4","C:\\Code Works\\dynamicform\\src\\components\\InputDisplay.js":"5"},{"size":500,"mtime":1648553666596,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1648553666745,"results":"8","hashOfConfig":"7"},{"size":4490,"mtime":1648648710890,"results":"9","hashOfConfig":"7"},{"size":4173,"mtime":1648555696805,"results":"10","hashOfConfig":"7"},{"size":3098,"mtime":1648658305226,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1pipbbk",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"15"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Code Works\\dynamicform\\src\\index.js",[],[],["29","30"],"C:\\Code Works\\dynamicform\\src\\reportWebVitals.js",[],[],"C:\\Code Works\\dynamicform\\src\\App.js",["31","32"],[],"C:\\Code Works\\dynamicform\\src\\components\\Appbar.js",["33","34","35","36","37"],[],"import React from 'react'\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nconst pages = [''];\r\n\r\nfunction Appbar (){\r\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n    const handleOpenNavMenu = (event) => {\r\n        setAnchorElNav(event.currentTarget);\r\n    };\r\n    const handleOpenUserMenu = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseNavMenu = () => {\r\n        setAnchorElNav(null);\r\n    };\r\n\r\n    const handleCloseUserMenu = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Container maxWidth=\"xl\">\r\n                    <Toolbar disableGutters>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\r\n                    >\r\n                        {/* LOGO */}\r\n                    </Typography>\r\n\r\n                    <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n                        <IconButton\r\n                        size=\"large\"\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"menu-appbar\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleOpenNavMenu}\r\n                        color=\"inherit\"\r\n                        >\r\n                        <MenuIcon />\r\n                        </IconButton>\r\n                        <Menu\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorElNav}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        open={Boolean(anchorElNav)}\r\n                        onClose={handleCloseNavMenu}\r\n                        sx={{\r\n                            display: { xs: 'block', md: 'none' },\r\n                        }}\r\n                        >\r\n                        {pages.map((page) => (\r\n                            <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                            <Typography textAlign=\"center\">{page}</Typography>\r\n                            </MenuItem>\r\n                        ))}\r\n                        </Menu>\r\n                    </Box>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\r\n                    >\r\n                        {/* LOGO */}\r\n                    </Typography>\r\n                    <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n                        {pages.map((page) => (\r\n                        <Button\r\n                            key={page}\r\n                            onClick={handleCloseNavMenu}\r\n                            sx={{ my: 2, color: 'white', display: 'block' }}\r\n                        >\r\n                            {page}\r\n                        </Button>\r\n                        ))}\r\n                    </Box>\r\n                    </Toolbar>\r\n                </Container>\r\n                </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Appbar;","C:\\Code Works\\dynamicform\\src\\components\\InputDisplay.js",["38","39","40","41"],[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":48,"column":61,"nodeType":"48","messageId":"49","endLine":48,"endColumn":63},{"ruleId":"46","severity":1,"message":"50","line":98,"column":31,"nodeType":"48","messageId":"49","endLine":98,"endColumn":33},{"ruleId":"51","severity":1,"message":"52","line":11,"column":8,"nodeType":"53","messageId":"54","endLine":11,"endColumn":14},{"ruleId":"51","severity":1,"message":"55","line":13,"column":8,"nodeType":"53","messageId":"54","endLine":13,"endColumn":15},{"ruleId":"51","severity":1,"message":"56","line":20,"column":12,"nodeType":"53","messageId":"54","endLine":20,"endColumn":24},{"ruleId":"51","severity":1,"message":"57","line":25,"column":11,"nodeType":"53","messageId":"54","endLine":25,"endColumn":29},{"ruleId":"51","severity":1,"message":"58","line":33,"column":11,"nodeType":"53","messageId":"54","endLine":33,"endColumn":30},{"ruleId":"46","severity":1,"message":"50","line":35,"column":28,"nodeType":"48","messageId":"49","endLine":35,"endColumn":30},{"ruleId":"46","severity":1,"message":"50","line":35,"column":56,"nodeType":"48","messageId":"49","endLine":35,"endColumn":58},{"ruleId":"46","severity":1,"message":"47","line":50,"column":28,"nodeType":"48","messageId":"49","endLine":50,"endColumn":30},{"ruleId":"46","severity":1,"message":"47","line":71,"column":28,"nodeType":"48","messageId":"49","endLine":71,"endColumn":30},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'Tooltip' is defined but never used.","'anchorElUser' is assigned a value but never used.","'handleOpenUserMenu' is assigned a value but never used.","'handleCloseUserMenu' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]