{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code Works\\\\dynamicform\\\\src\\\\components\\\\Appbar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = ['Products', 'Pricing', 'Blog'];\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\n\nfunction Appbar() {\n  _s();\n\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleOpenUserMenu = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: true,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true,\n            component: \"div\",\n            sx: {\n              mr: 2,\n              display: {\n                xs: 'none',\n                md: 'flex'\n              }\n            },\n            children: \"LOGO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: 'flex',\n                md: 'none'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              \"aria-label\": \"account of current user\",\n              \"aria-controls\": \"menu-appbar\",\n              \"aria-haspopup\": \"true\",\n              onClick: handleOpenNavMenu,\n              color: \"inherit\",\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"menu-appbar\",\n              anchorEl: anchorElNav,\n              anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'left'\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'left'\n              },\n              open: Boolean(anchorElNav),\n              onClose: handleCloseNavMenu,\n              sx: {\n                display: {\n                  xs: 'block',\n                  md: 'none'\n                }\n              },\n              children: pages.map(page => /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleCloseNavMenu,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  textAlign: \"center\",\n                  children: page\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 29\n                }, this)\n              }, page, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true,\n            component: \"div\",\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: 'flex',\n                md: 'none'\n              }\n            },\n            children: \"LOGO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: 'none',\n                md: 'flex'\n              }\n            },\n            children: pages.map(page => /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCloseNavMenu,\n              sx: {\n                my: 2,\n                color: 'white',\n                display: 'block'\n              },\n              children: page\n            }, page, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Open settings\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleOpenUserMenu,\n                sx: {\n                  p: 0\n                },\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: \"Remy Sharp\",\n                  src: \"/static/images/avatar/2.jpg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              sx: {\n                mt: '45px'\n              },\n              id: \"menu-appbar\",\n              anchorEl: anchorElUser,\n              anchorOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              open: Boolean(anchorElUser),\n              onClose: handleCloseUserMenu,\n              children: settings.map(setting => /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleCloseUserMenu,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  textAlign: \"center\",\n                  children: setting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 29\n                }, this)\n              }, setting, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Appbar, \"QIsqpM/yGRL4/FzrSPXSWTpMbZs=\");\n\n_c = Appbar;\nexport default Appbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Appbar\");","map":{"version":3,"sources":["C:/Code Works/dynamicform/src/components/Appbar.js"],"names":["React","AppBar","Box","Toolbar","IconButton","Typography","Menu","MenuIcon","Container","Avatar","Button","Tooltip","MenuItem","pages","settings","Appbar","anchorElNav","setAnchorElNav","useState","anchorElUser","setAnchorElUser","handleOpenNavMenu","event","currentTarget","handleOpenUserMenu","handleCloseNavMenu","handleCloseUserMenu","mr","display","xs","md","flexGrow","vertical","horizontal","Boolean","map","page","my","color","p","mt","setting"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nconst pages = ['Products', 'Pricing', 'Blog'];\r\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\r\n\r\nfunction Appbar (){\r\n    const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n    const handleOpenNavMenu = (event) => {\r\n        setAnchorElNav(event.currentTarget);\r\n    };\r\n    const handleOpenUserMenu = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseNavMenu = () => {\r\n        setAnchorElNav(null);\r\n    };\r\n\r\n    const handleCloseUserMenu = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\">\r\n                <Container maxWidth=\"xl\">\r\n                    <Toolbar disableGutters>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\r\n                    >\r\n                        LOGO\r\n                    </Typography>\r\n\r\n                    <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n                        <IconButton\r\n                        size=\"large\"\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"menu-appbar\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleOpenNavMenu}\r\n                        color=\"inherit\"\r\n                        >\r\n                        <MenuIcon />\r\n                        </IconButton>\r\n                        <Menu\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorElNav}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        open={Boolean(anchorElNav)}\r\n                        onClose={handleCloseNavMenu}\r\n                        sx={{\r\n                            display: { xs: 'block', md: 'none' },\r\n                        }}\r\n                        >\r\n                        {pages.map((page) => (\r\n                            <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                            <Typography textAlign=\"center\">{page}</Typography>\r\n                            </MenuItem>\r\n                        ))}\r\n                        </Menu>\r\n                    </Box>\r\n                    <Typography\r\n                        variant=\"h6\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\r\n                    >\r\n                        LOGO\r\n                    </Typography>\r\n                    <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n                        {pages.map((page) => (\r\n                        <Button\r\n                            key={page}\r\n                            onClick={handleCloseNavMenu}\r\n                            sx={{ my: 2, color: 'white', display: 'block' }}\r\n                        >\r\n                            {page}\r\n                        </Button>\r\n                        ))}\r\n                    </Box>\r\n\r\n                    <Box sx={{ flexGrow: 0 }}>\r\n                        <Tooltip title=\"Open settings\">\r\n                        <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n                        </IconButton>\r\n                        </Tooltip>\r\n                        <Menu\r\n                        sx={{ mt: '45px' }}\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorElUser}\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        open={Boolean(anchorElUser)}\r\n                        onClose={handleCloseUserMenu}\r\n                        >\r\n                        {settings.map((setting) => (\r\n                            <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                            <Typography textAlign=\"center\">{setting}</Typography>\r\n                            </MenuItem>\r\n                        ))}\r\n                        </Menu>\r\n                    </Box>\r\n                    </Toolbar>\r\n                </Container>\r\n                </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Appbar;"]},"metadata":{},"sourceType":"module"}