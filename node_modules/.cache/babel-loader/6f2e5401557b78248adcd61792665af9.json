{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code Works\\\\dynamicform\\\\src\\\\components\\\\InputDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputDisplay(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n\n  // Fixes the FieldNames\n  const FixNames = string => {\n    let word = string.replace(/([A-Z])/g, ' $1').trim();\n    word = word.toLowerCase().replace(/\\b[a-z]/g, function (letter) {\n      return letter.toUpperCase();\n    });\n    return word;\n  };\n\n  const [dataValue, setDataValue] = useState(data.value);\n\n  const DisplayStuff = () => {\n    console.log(dataValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        width: 1,\n        border: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-required\",\n        label: FixNames(data.fieldName),\n        defaultValue: dataValue,\n        sx: {\n          width: 1\n        },\n        onChange: e => setDataValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputDisplay, \"aOQ6HBNvSvK65PGoCzeL8EpoWJs=\");\n\n_c = InputDisplay;\nexport default InputDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputDisplay\");","map":{"version":3,"sources":["C:/Code Works/dynamicform/src/components/InputDisplay.js"],"names":["React","Box","TextField","useState","Button","InputDisplay","data","FixNames","string","word","replace","trim","toLowerCase","letter","toUpperCase","dataValue","setDataValue","value","DisplayStuff","console","log","mb","width","border","fieldName","e","target"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,eAAvB;;;AAEA,SAASC,YAAT,OAA8B;AAAA;;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;;AAE1B;AACA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAIC,IAAI,GAAGD,MAAM,CAACE,OAAP,CAAe,UAAf,EAA2B,KAA3B,EAAkCC,IAAlC,EAAX;AACAF,IAAAA,IAAI,GAAGA,IAAI,CAACG,WAAL,GAAmBF,OAAnB,CAA2B,UAA3B,EAAuC,UAASG,MAAT,EAAiB;AAC3D,aAAOA,MAAM,CAACC,WAAP,EAAP;AACH,KAFM,CAAP;AAGA,WAAOL,IAAP;AACH,GAND;;AAQA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAACG,IAAI,CAACW,KAAN,CAA1C;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACH,GAFD;;AAKA,sBACI;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAACM,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,KAAK,EAAC,CAAb;AAAgBC,QAAAA,MAAM,EAAC;AAAvB,OAAT;AAAA,8BAgBI,QAAC,SAAD;AACI,QAAA,EAAE,EAAC,mBADP;AAEI,QAAA,KAAK,EAAEhB,QAAQ,CAACD,IAAI,CAACkB,SAAN,CAFnB;AAGI,QAAA,YAAY,EAAET,SAHlB;AAII,QAAA,EAAE,EAAG;AAACO,UAAAA,KAAK,EAAC;AAAP,SAJT;AAKI,QAAA,QAAQ,EAAEG,CAAC,IAAIT,YAAY,CAACS,CAAC,CAACC,MAAF,CAAST,KAAV;AAL/B;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAwBI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GAjDQZ,Y;;KAAAA,Y;AAoDT,eAAeA,YAAf","sourcesContent":["import React from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport TextField from '@mui/material/TextField'\r\n\r\nimport {useState} from 'react'\r\nimport { Button } from '@mui/material'\r\n\r\nfunction InputDisplay({data}) {\r\n    \r\n    // Fixes the FieldNames\r\n    const FixNames = (string) => {\r\n        let word = string.replace(/([A-Z])/g, ' $1').trim();\r\n        word = word.toLowerCase().replace(/\\b[a-z]/g, function(letter) {\r\n            return letter.toUpperCase();\r\n        });\r\n        return word\r\n    }\r\n\r\n    const [dataValue, setDataValue] = useState(data.value)\r\n\r\n\r\n    const DisplayStuff = () => {\r\n        console.log(dataValue)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Box sx={{mb:3, width:1, border:0}}>\r\n                {/* Name: {data.fieldName} <br/>\r\n                Type: {data.type} <br/>\r\n                Value: {data.value}\r\n\r\n                {data.options ?\r\n                    <div>\r\n                        Options:\r\n                        {data.options.map(option => (\r\n                            <div>- {option} <br/></div>\r\n                        ))}\r\n                    </div>\r\n                : null} */}\r\n\r\n\r\n                {/* TEXT FIELD */}\r\n                <TextField\r\n                    id=\"outlined-required\"\r\n                    label={FixNames(data.fieldName)}\r\n                    defaultValue={dataValue}\r\n                    sx ={{width:1}}\r\n                    onChange={e => setDataValue(e.target.value)}\r\n                />\r\n\r\n                <Button>Display</Button>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default InputDisplay"]},"metadata":{},"sourceType":"module"}